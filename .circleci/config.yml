version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6
    steps:
      - checkout
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64"

            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"

            mkdir -p ~/.docker/cli-plugins

            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx

            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
      - run:
          name: Install tools
          command: |
            sudo apt-get update
            sudo apt-get install -y curl jq
      - run:
          name: Check TAG files
          command: |
            for tag in */TAG; do
                d=$(dirname $tag)
                c="$(./tag_exists.sh $d)"
                if [ "$c" = ng ]; then
                    echo $d >> BUILDS
                fi
            done
      - run:
          name: Log in to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build and push images
          command: |
            if [ ! -f BUILDS ]; then
                echo "nothing to build."
                exit 0
            fi
            docker buildx create --name mybuilder --use
            for d in $(cat BUILDS); do
                echo "linting $d ..."
                docker run --rm -i hadolint/hadolint /bin/hadolint - < $d/Dockerfile
                echo "building and pushing $d ..."
                TAG=$(cat $d/TAG)
                docker buildx build --platform ${BUILDX_PLATFORMS} -t mitsutaka/${d}:$TAG --push $d
                if [ -f $d/BRANCH ]; then
                    BRANCH=$(cat $d/BRANCH)
                    docker buildx build --platform ${BUILDX_PLATFORMS} -t mitsutaka/${d}:$BRANCH --push $d
                fi
            done

  docker-compose-build:
    working_directory: /app
    docker:
      - image: docker/compose:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: docker-compose-build
          command: |
            docker-compose -f docker-compose.yml build --parallel

workflows:
  version: 2
  main:
    jobs:
      - build
      - docker-compose-build
